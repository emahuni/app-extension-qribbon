(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["5ac65bc2"],{"8b24":function(n,e,r){"use strict";r.r(e);var o=function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("q-page",{staticClass:"row justify-center"},[r("q-card",{staticClass:"q-my-lg q-pt-md flat bordered",staticStyle:{width:"75%"}},[r("q-card-section",[r("q-markdown",{attrs:{src:n.template}})],1)],1)],1)},t=[],i=r("cff9"),a={name:"PageIndex",data:function(){return{template:i["a"]}}},s=a,l=r("2877"),b=Object(l["a"])(s,o,t,!1,null,null,null);e["default"]=b.exports},cff9:function(n,e,r){"use strict";e["a"]='QRibbon\r\n===\r\n\r\n> Please note, this is currently a work-in-progress (WIP).\r\n\r\nQRibbon is a [Quasar App Extension](https://quasar.dev/app-extensions/introduction). It allows you to display ribbons on your page.\r\n\r\n# Install\r\nTo add this App Extension to your Quasar application, run the following (in your Quasar app folder):\r\n```\r\nquasar ext add qribbon\r\n```\r\n\r\n# Uninstall\r\nTo remove this App Extension from your Quasar application, run the following (in your Quasar app folder):\r\n```\r\nquasar ext remove qribbon\r\n```\r\n\r\n# Describe\r\nYou can use `quasar describe QRibbon` (to be implemented before QRibbon v1 release)\r\n\r\n# Source\r\nCan be found [here](https://github.com/webnoob/app-extension-qribbon/).\r\n\r\n# Docs\r\nCan be found [here](https://webnoob.github.io/app-extension-qribbon/demo/dist/spa/docs).\r\n\r\n# Examples\r\nCan be found [here](https://webnoob.github.io/app-extension-qribbon/demo/dist/spa/examples).\r\n\r\n# Interactive Demo / QRibbon Builder\r\nCan be found [here](https://webnoob.github.io/app-extension-qribbon/demo/dist/spa/builder).\r\n\r\n# Demo (source) Project\r\nCan be found [here](https://github.com/webnoob/app-extension-qribbon/tree/master/demo).\r\n\r\n# QRibbon API\r\n\r\n## Vue Properties\r\n\r\n| Vue Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| type | String | `horizontal` | Acceptable options are `horizontal`, `corner`, `vertical` |\r\n| position | String | `left` or `top-left` | Acceptable strings are: <br/> Type==`horizontal`: `left`, `right`, `full`<br/> Type==`corner`or`vertical`: `top left`, `top right`, `bottom left`, `bottom right` |\r\n| color | String | `white` | CSS Color for the text |\r\n| background-color | String | `#027BE3` | CSS Color for the background |\r\n| leaf-color | String | Auto shaded based on `background-color` | CSS Color for the leaf |\r\n| leaf-position | String | `bottom` or `left` | Acceptable strings are: <br/> Type==`horizontal`: `top`, `bottom`<br/> Type==`vertical`: `left`, `right` |\r\n| size | String | `null` | Acceptable option is `full` to fill the container. |\r\n| decoration | String | `null` | Cannot be used with `corner` type ribbon. Acceptable options are `rounded-in`, `rounded-out`, `point-in`, `point-out`. |\r\n| inline | Boolean | `false` | Used when 2 QRibbons are required to be inline (on left and right along the same X axis). Bith QRibbon\'s must be wrapped in a `<div class="flex justify-between"></div>`. |\r\n\r\n## Vue Slots\r\n| Slot Name | Description |\r\n| --- | --- |\r\n| default | Any content can be entered into the default slot and it will show in the ribbon. |\r\n\r\n---\r\nThis page created with [QMarkdown](https://quasarframework.github.io/app-extension-qmarkdown), another great Quasar App Extension.\r\n'}}]);